[project]
name = "py-starter"
version = "0.1.0"
description = "Async-first FastAPI application template for building microservices and data processing APIs"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "aioboto3==14.3.0",
    "aiobotocore==2.22.0",
    "aiofiles==24.1.0",
    "aiohappyeyeballs==2.6.1",
    "aiohttp==3.12.12",
    "aioitertools==0.12.0",
    "aiomysql==0.2.0",
    "aiosignal==1.3.2",
    "annotated-types==0.7.0",
    "anyio==4.9.0",
    "astroid==3.3.10",
    "attrs==25.3.0",
    "backoff==2.2.1",
    "black==25.1.0",
    "boto3==1.37.3",
    "botocore==1.37.3",
    "botocore-stubs==1.38.30",
    "certifi==2025.4.26",
    "charset-normalizer==3.4.2",
    "click==8.2.1",
    "croniter==6.0.0",
    "Deprecated==1.2.18",
    "dill==0.4.0",
    "distro==1.9.0",
    "dnspython==2.7.0",
    "dotenv==0.9.9",
    "fastapi==0.115.12",
    "frozenlist==1.7.0",
    "h11==0.16.0",
    "httpcore==1.0.9",
    "httpx==0.28.1",
    "idna==3.10",
    "isort==6.0.1",
    "jiter==0.10.0",
    "jmespath==1.0.1",
    "limits==5.4.0",
    "mccabe==0.7.0",
    "motor==3.7.1",
    "multidict==6.4.4",
    "openai==1.86.0",
    "packaging==25.0",
    "pathspec==0.12.1",
    "platformdirs==4.3.8",
    "propcache==0.3.2",
    "pydantic==2.11.5",
    "pydantic_core==2.33.2",
    "pymongo==4.13.1",
    "PyMySQL==1.1.1",
    "python-dateutil==2.9.0.post0",
    "python-dotenv==1.1.0",
    "pytz==2025.2",
    "redis==6.2.0",
    "requests==2.32.4",
    "s3transfer==0.11.3",
    "schedule==1.2.2",
    "six==1.17.0",
    "slowapi==0.1.9",
    "sniffio==1.3.1",
    "starlette==0.46.2",
    "tomlkit==0.13.3",
    "tqdm==4.67.1",
    "typing-inspection==0.4.1",
    "typing_extensions==4.14.0",
    "urllib3==2.4.0",
    "uvicorn==0.34.3",
    "uvloop==0.21.0",
    "wrapt==1.17.2",
    "yarl==1.20.1"
]

[project.optional-dependencies]
dev = [
    "black==25.1.0",
    "isort==6.0.1",
    "mypy==1.16.0",
    "pylint==3.3.7",
    "ruff==0.8.0",
    "pytest==8.3.3",
    "pytest-asyncio==0.24.0",
    "pytest-cov==6.0.0",
]
types = [
    "boto3-stubs==1.38.38",
    "mypy-boto3-cloudformation==1.38.31",
    "mypy-boto3-dynamodb==1.38.4",
    "mypy-boto3-ec2==1.38.33",
    "mypy-boto3-lambda==1.38.0",
    "mypy-boto3-rds==1.38.35",
    "mypy-boto3-s3==1.38.26",
    "mypy-boto3-sqs==1.38.0",
    "types-aioboto3==14.3.0",
    "types-aiobotocore==2.23.0",
    "types-aiobotocore-s3==2.22.0",
    "types-awscrt==0.27.2",
    "types-s3transfer==0.13.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
# Also enable isort (`I`), pydocstyle (`D`), and others
lint.select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "T10",    # flake8-debugger
    "EM",     # flake8-errmsg
    "ISC",    # flake8-implicit-str-concat
    "RET",    # flake8-return
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "PTH",    # flake8-use-pathlib
    "ERA",    # flake8-eradicate
    "Q",      # flake8-quotes
    "ASYNC",  # flake8-async
    "ARG",    # flake8-unused-arguments
    "COM",    # flake8-commas
]

lint.ignore = [
    "E501",   # Line too long - let the formatter handle this
    "COM812", # Trailing comma missing - conflicts with formatter
    "ISC001", # Single line implicit string concatenation - conflicts with formatter
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["ALL"]
lint.unfixable = []

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "venv",
    "__pycache__",
    "build",
    "dist",
]

# Same as Black.
line-length = 88

# Assume Python 3.9
target-version = "py39"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.ruff.lint.per-file-ignores]
# Tests can have long lines, unused arguments, etc.
"tests/**/*.py" = ["E501", "ARG001", "ARG002"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Allow gradual typing
disallow_any_generics = false
disallow_subclassing_any = false

# Ignore missing imports for third-party packages without stubs
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
asyncio_mode = "auto"
addopts = """
    -ra
    --strict-markers
    --ignore=docs
    --ignore=setup.py
    --ignore=ci
    --ignore=.eggs
    --doctest-modules
    --doctest-glob="*.md"
    --tb=short
    --strict-config
    --cov=src
    --cov-report=term-missing:skip-covered
    --cov-report=html
    --cov-report=xml
    --cov-branch
"""

[tool.coverage.run]
source = ["src"]
branch = true
parallel = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
